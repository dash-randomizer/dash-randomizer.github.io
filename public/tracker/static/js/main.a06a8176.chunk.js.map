{"version":3,"sources":["components/clickableTrackerItem/index.js","components/trackerItemGrouping/index.js","checks.js","App.js","serviceWorker.js","index.js"],"names":["ClickableTrackerItem","props","useState","stateIndex","setStateIndex","itemAvailability","itemClass","itemClickStates","includes","className","onClick","length","indexOf","join","src","Array","isArray","itemIcon","title","itemName","alt","TrackerItemGrouping","groupIcon","availabilityState","setAvailability","undefined","showGroup","itemCurrentClickState","groupedItems","map","item","i","key","itemXsize","Xsize","itemYsize","Ysize","charge","ice","wave","spazer","plasma","morph","varia","springball","hijump","space","bombs","gravity","speed","screw","bigSpacer","kraid","phantoon","draygon","ridley","trackerJson","App","group","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a06a8176.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction ClickableTrackerItem(props) {\r\n\r\n    const [stateIndex, setStateIndex] = useState(0);\r\n\r\n    var itemAvailability = props.itemAvailability\r\n    if(props.itemAvailability == null) {\r\n        itemAvailability = []\r\n    }\r\n\r\n\r\n    var itemClass = \"item\"\r\n    if (props.itemClickStates[0].includes(\"key\")) {\r\n        itemClass = \"key\"\r\n    } \r\n\r\n    return (\r\n        <div className={itemClass} onClick={() => {\r\n            setStateIndex(((stateIndex + 1) % props.itemClickStates.length))\r\n            if (props.itemAvailability.indexOf(\"character\") === -1) {\r\n                return\r\n            }\r\n            }} >\r\n            <img \r\n                className={\"item-image \" + props.itemClickStates[stateIndex] + \" \" + itemAvailability.join(\" \")} \r\n                src={Array.isArray(props.itemIcon) ? props.itemIcon[stateIndex] : props.itemIcon} \r\n                title={props.itemName} \r\n                alt={props.itemName} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClickableTrackerItem","import React, { useState } from 'react'\r\nimport ClickableTrackerItem from '../clickableTrackerItem'\r\n\r\nfunction TrackerItemGrouping(props) {\r\n\r\n    const [availabilityState, setAvailability] = useState(props.groupIcon.itemAvailability[0] === \"always\")\r\n\r\n        return (\r\n            <div className={\"tracker-group\" + (availabilityState ? \" available\" : \" unavailable\")}>\r\n            {(props.showGroup === undefined || props.showGroup) &&\r\n                <div className=\"group-item\">\r\n                    <div></div>\r\n                    <div onClick={() => {setAvailability(props.groupIcon.itemAvailability[0] === \"always\" || (!availabilityState))}}>\r\n                    <ClickableTrackerItem\r\n                        itemIcon={props.groupIcon.itemIcon}\r\n                        itemName={props.groupIcon.itemName}\r\n                        itemClickStates={props.groupIcon.itemClickStates}\r\n                        itemCurrentClickState={0}\r\n                        itemAvailability={props.groupIcon.itemAvailability}                        \r\n                    />\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n            }\r\n                <div className={\"tracker-group-items\"}>\r\n                        {props.groupedItems.map((item, i) =>\r\n                            <ClickableTrackerItem\r\n                                key={i}\r\n                                itemIcon={item.itemIcon}\r\n                                itemName={item.itemName}\r\n                                itemClickStates={item.itemClickStates}\r\n                                itemCurrentClickState={0}\r\n                                itemAvailability={item.itemAvailability}\r\n                                itemXsize={item.Xsize === undefined ? 1 : item.Xsize}                                \r\n                                itemYsize={item.Ysize === undefined ? 1 : item.Ysize}\r\n                            />\r\n                        )}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default TrackerItemGrouping","let charge = {\r\n    itemIcon:[\"./icons/charge.png\",\"./icons/charge-lvl1.png\",\"./icons/charge-lvl2.png\",\"./icons/charge-lvl3.png\",\"./icons/charge-lvl4.png\"],\r\n    itemName:\"charge\", \r\n    itemClickStates: [\"uncollected\",\"collected\",\"collected\",\"collected\",\"collected\"], \r\n    itemAvailability: [\"always\"]}\r\nlet ice = {itemIcon:\"./icons/ice.png\", itemName:\"ice\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet wave = {itemIcon:\"./icons/wave.png\", itemName:\"wave\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet spazer = {itemIcon:\"./icons/spazer.png\", itemName:\"spazer\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet plasma = {itemIcon:\"./icons/plasma.png\", itemName:\"plasma\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet morph = {itemIcon:\"./icons/morph.png\", itemName:\"morph\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet varia = {itemIcon:\"./icons/varia.png\", itemName:\"varia\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet heatshield = {itemIcon:\"./icons/heatshield.png\", itemName:\"heatshield\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet springball = {itemIcon:\"./icons/springball.png\", itemName:\"springball\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet hijump = {itemIcon:\"./icons/hijump.png\", itemName:\"hijump\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet space = {itemIcon:\"./icons/space.png\", itemName:\"space\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet doublejump = {itemIcon:\"./icons/doublejump.png\", itemName:\"doublejump\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet bombs = {itemIcon:\"./icons/bomb.png\", itemName:\"bombs\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet gravity = {itemIcon:\"./icons/gravity.png\", itemName:\"gravity\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}    \r\nlet pressurevalve = {itemIcon:\"./icons/pressurevalve.png\", itemName:\"presurevalve\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}    \r\n\r\n\r\nlet speed = {itemIcon:\"./icons/speed.png\", itemName:\"speed\", itemClickStates: [\"uncollected\",\"collected\"], itemAvailability: [\"always\"]}\r\nlet screw = {itemIcon:\"./icons/screw.png\", itemName:\"screw\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet bigSpacer = {itemIcon:\"./icons/spacer.png\", itemName:\"spacer\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet spacer = {itemIcon:\"./icons/spacer.png\", itemName:\"spacer\", itemClickStates:[\"collected key\"], itemAvailability:[\"always\"]}\r\nlet grappling = {itemIcon:\"./icons/grappling.png\", itemName:\"grappling\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet kraid = {itemIcon:\"./icons/kraidR-gold.png\", itemName:\"kraid\", itemClickStates: [\"collected\", \"uncollected\"], itemAvailability: [\"always\"]}\r\nlet phantoon = {itemIcon:\"./icons/phannyFinal-gold.png\", itemName:\"phantoon\", itemClickStates: [\"collected\", \"uncollected\"], itemAvailability: [\"always\"]}\r\nlet draygon = {itemIcon:\"./icons/draygonShaded-gold.png\", itemName:\"draygon\", itemClickStates: [\"collected\", \"uncollected\"], itemAvailability: [\"always\"]}\r\nlet ridley = {itemIcon:\"./icons/ridleyShaded-gold.png\", itemName:\"ridley\", itemClickStates: [\"collected\", \"uncollected\"], itemAvailability: [\"always\"]}\r\n\r\nlet xray = {itemIcon:\"./icons/xray.png\", itemName:\"xray\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet missile = {itemIcon:\"./icons/missile.png\", itemName:\"missile1\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet superMissile = {itemIcon:\"./icons/super.png\", itemName:\"super1\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\nlet pbomb = {itemIcon:\"./icons/pbomb.png\", itemName:\"pbomb\", itemClickStates: [\"uncollected\", \"collected\"], itemAvailability: [\"always\"]}\r\n\r\nlet crLabel = {itemIcon:\"./icons/cr.png\", itemName:\"crLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet crateriaKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"crateriaKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet crateriaKey2 = {itemIcon:\"./icons/key2.png\", itemName:\"crateriaKey2\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet crateriaKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"crateriaKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet brLabel = {itemIcon:\"./icons/br.png\", itemName:\"brLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet brinstarKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"brinstarKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet brinstarKey2 = {itemIcon:\"./icons/key2.png\", itemName:\"brinstarKey2\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet brinstarKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"brinstarKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet unLabel = {itemIcon:\"./icons/un.png\", itemName:\"unLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet upperNorfairKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"upperNorfairKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet upperNorfairKey2 = {itemIcon:\"./icons/key2.png\", itemName:\"upperNorfairKey2\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet upperNorfairKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"upperNorfairKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet maLabel = {itemIcon:\"./icons/ma.png\", itemName:\"maLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet maridiaKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"maridiaKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet maridiaKey2 = {itemIcon:\"./icons/key2.png\", itemName:\"maridiaKey2\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet maridiaKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"maridiaKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet wsLabel = {itemIcon:\"./icons/ws.png\", itemName:\"wsLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet wreckedShipKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"wreckedShipKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet wreckedShipKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"wreckedShipKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet lnLabel = {itemIcon:\"./icons/ln.png\", itemName:\"lnLabel\", itemClickStates: [\"collected key\"], itemAvailability: [\"always\"]}\r\nlet lowerNorfairKey1 = {itemIcon:\"./icons/key1.png\", itemName:\"lowerNorfairKey1\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\nlet lowerNorfairKeyBoss = {itemIcon:\"./icons/keyBoss.png\", itemName:\"lowerNorfairKeyBoss\", itemClickStates: [\"uncollected key\", \"collected key\"], itemAvailability: [\"always\"]}\r\n\r\nlet trackerKeySanityJson = [\r\n    {\r\n        groupIcon: morph,\r\n        groupedItems: [\r\n            \r\n            crLabel, crateriaKey1, crateriaKey2, crateriaKeyBoss,\r\n            morph,               \r\n            hijump,\r\n            charge,\r\n                    \r\n            brLabel, brinstarKey1, brinstarKey2, brinstarKeyBoss,             \r\n            unLabel, upperNorfairKey1, upperNorfairKey2, upperNorfairKeyBoss, \r\n            \r\n            \r\n            bombs,            \r\n            speed,  \r\n            ice,     \r\n            maLabel, maridiaKey1, maridiaKey2, maridiaKeyBoss, \r\n\r\n            \r\n            wsLabel, wreckedShipKey1, spacer, wreckedShipKeyBoss, \r\n            varia,        \r\n            space,\r\n            wave,    \r\n            lnLabel, lowerNorfairKey1, spacer, lowerNorfairKeyBoss,\r\n            \r\n            spacer, spacer, \r\n            ridley,   \r\n            gravity,  \r\n            springball,\r\n            spazer,\r\n            spacer, spacer,          \r\n            kraid,\r\n            \r\n            phantoon,\r\n            draygon,\r\n            screw,\r\n            plasma,\r\n\r\n            \r\n    ]\r\n    }]\r\n\r\nlet trackerJson = [\r\n    {\r\n        groupIcon: morph,\r\n        groupedItems: [\r\n            kraid,\r\n            charge,\r\n            heatshield,\r\n            morph,\r\n            hijump,\r\n            \r\n            phantoon,\r\n            ice,\r\n            varia,\r\n            bombs,\r\n            doublejump,\r\n\r\n            draygon,\r\n            wave,\r\n            pressurevalve,\r\n            springball,\r\n            space,\r\n\r\n            ridley,\r\n            spazer,\r\n            gravity,\r\n            screw,\r\n            speed,\r\n            \r\n            bigSpacer,\r\n            plasma,\r\n            xray,\r\n            grappling,\r\n            bigSpacer,          \r\n    ]\r\n    }]\r\n\r\nexport default trackerJson","import React from 'react';\r\nimport './App.css';\r\nimport './tracker.css';\r\nimport TrackerItemGrouping from './components/trackerItemGrouping'\r\nimport trackerJson from './checks'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        \r\n        <h2>Super Metroid: Recall</h2>\r\n        <div className=\"groups\">\r\n          {\r\n            trackerJson.map((group, i) =>\r\n              <TrackerItemGrouping\r\n                groupIcon={group.groupIcon}\r\n                groupedItems={group.groupedItems}\r\n              />\r\n            )\r\n          }\r\n        </div>\r\n      </header>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}