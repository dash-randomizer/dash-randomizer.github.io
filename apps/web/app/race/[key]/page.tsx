import { kv } from '@vercel/kv'
import { stringToParams } from 'core'
import { notFound } from 'next/navigation'
import Seed from '../../seed/[seed]/seed'
import { prefetchSignature } from 'core'
import Toaster from '../../components/toaster'
import Link from 'next/link'
import styles from '../../seed/[seed]/seed.module.css'

type RaceSeedData = {
  hash: string
  key: string
  mystery: boolean
  spoiler: object
}

export async function generateMetadata({ params }: { params : { key: string }}) {
  return {
    title: `DASH Randomizer Race`,
    description: params.key
  }
}

export default async function RaceSeedPage({ params }: { params: { key: string } }) {
  const { key } = params
  const data = await kv.hgetall(`race-${key}`)
  if (!data) {
    return notFound()
  }

  const { hash, mystery, spoiler } = data as RaceSeedData
  const seedParams = stringToParams(hash)
  const seedNum = seedParams.seed
  const sig = prefetchSignature(seedNum)

  const SeedFooter = () => {
    return (
      <footer className={styles.footer}>
        <p>
          This seed was generated by
          <br />
          <Link href="/">DASH Randomizer</Link>
        </p>
      </footer>
    );
  };

  return (
    <main className={styles.container}>
      <h1 className={styles.logo}>DASH</h1>
      <Seed
        parameters={seedParams}
        hash={hash}
        signature={sig}
        slug={key}
        race={true}
        mystery={mystery}
        spoiler={!!spoiler}
      />
      <SeedFooter />
      <Toaster />
    </main>
  )
}
